name: Java CI with Gradle

# Triggers the workflow on push or pull request to the main branch
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # Check out the repository
    - uses: actions/checkout@v4

    # Set up JDK 17 for Java
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Set up Gradle and cache dependencies
    - name: Cache Gradle dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    # Build the project using Gradle Wrapper
    - name: Build with Gradle Wrapper
      run: ./gradlew build

    # Run the JUnit tests
    - name: Run Tests
      run: ./gradlew test

    # Upload test results (optional but helpful)
    - name: Upload JUnit Test Results
      uses: actions/upload-artifact@v3
      with:
        name: junit-results
        path: build/test-results/test/*.xml

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    # Check out the repository for dependency submission
    - uses: actions/checkout@v4

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Submits a dependency graph for security alerts (optional)
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@v4.0.0
